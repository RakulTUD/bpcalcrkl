# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - RakulTUDBPCalculator

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
     # - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"RakulTUD_bpcalcrkl" /o:"rakultud" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build --configuration Release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      
      - name: Run dotnet UnitTests 
        run: dotnet test .\BPCalculatorUnitTests\BPCalculatorUnitTests.csproj --configuration Release --no-build --verbosity normal --collect "Code Coverage" --logger "trx;logfilename=UnittestResults.trx"
      
      - name: Pubilsh UnitTest Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
            name: Unit Tests
            path: "**/UnittestResults.trx"                            
            reporter: dotnet-trx
            fail-on-error: true
            
      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

      - name: Run BDD Test
        run: dotnet test .\SpecFlowProject1\SpecFlowProject1.csproj --configuration Release --no-build --verbosity normal --collect "Code Coverage" --logger "trx;logfilename=SpecFlowProject1.trx"
     
      - name: Publish BDD Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
            name: BDD Tests
            path: "**/SpecFlowProject1.trx"                            
            reporter: dotnet-trx
            fail-on-error: true

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'RakulTUDBPCalculator'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_6A678548496F4F8080F93F8A1F9DB9FD }}
      - name: Run selenium Tests
        run: dotnet test ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}SeleniumBpTestRuns.dll --logger:"trx;LogFileName=SeleniumTests.trx"

      - uses: actions/upload-artifact@v3
        with:
         name: Selenium Tests Results
         path: TestResults/SeleniumTests.trx     
